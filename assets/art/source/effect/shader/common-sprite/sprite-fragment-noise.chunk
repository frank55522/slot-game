  precision highp float;

  in vec4 color;
  in vec4 screenPos;
  in vec2 uv0;
  #pragma builtin(local)
  layout(set = 2, binding = 10) uniform sampler2D cc_spriteTexture;
  uniform sampler2D noiseMap;
  uniform Constant {
     vec4 noiseValue; // xy : speed, z: offset(0 - 1), w : time
     vec4 noiseScale;
  };

  vec4 frag () {
    vec2 screenXY = screenPos.xy/screenPos.w;
    vec2 screenUV = screenXY*0.5+0.5;
    float offsetU = texture(noiseMap, uv0 + vec2(noiseValue.w * noiseValue.x, 0.0)).r - noiseValue.z;
    float offsetV = texture(noiseMap, uv0 + vec2(0.0, noiseValue.w * noiseValue.y)).r - noiseValue.z;
    offsetU*=noiseScale.x;
    offsetV*=noiseScale.y;
    vec4 col = texture(cc_spriteTexture, uv0 + vec2(offsetU, offsetV))*color;
    // return col;
    // col.xy = screenUV;
    // col.z = 0.0;
    // col.w = 1.0;
    return col;
  }